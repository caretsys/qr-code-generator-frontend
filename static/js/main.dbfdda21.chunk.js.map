{"version":3,"sources":["api/index.js","components/DataInput.js","components/Result.js","App.js","index.js"],"names":["generateQR","input","a","body","FormData","append","axios","method","headers","url","data","responseType","response","responseBlob","Blob","type","reader","window","FileReader","readAsDataURL","DataInput","handleSubmit","state","onFinish","Item","name","TextArea","placeholder","loading","htmlType","Result","afterState","src","alt","style","color","href","download","icon","DownloadOutlined","active","App","useState","image","setImage","isLoading","setIsLoading","fetchQR","onload","imageDataUrl","result","className","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"2PAIaA,EAAU,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,6DAClBC,EAAO,IAAIC,UACZC,OAAO,WAAYJ,GAFA,SAGDK,IAAM,CAC3BC,OAAQ,OACRC,QAAS,CAAE,eAAgB,uBAC3BC,IARQ,0DASRC,KAAMP,EACNQ,aAAc,SARQ,cAGlBC,EAHkB,OAUlBC,EAAe,IAAIC,KAAK,CAACF,EAASF,MAAO,CAAEK,KAAM,eACjDC,EAAS,IAAIC,OAAOC,YACnBC,cAAcN,GAZG,kBAajBG,GAbiB,2CAAH,sD,2CCcRI,EAfG,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,aAAcC,EAAY,EAAZA,MACjC,OACE,kBAAC,IAAD,CAAMC,SAAUF,GACd,kBAAC,IAAKG,KAAN,CAAWC,KAAK,QACd,kBAAC,IAAMC,SAAP,CAAgBC,YAAY,iCAE9B,kBAAC,IAAKH,KAAN,KACE,kBAAC,IAAD,CAAQI,QAASN,EAAOP,KAAK,UAAUc,SAAS,UAAhD,kB,kBCcOC,EApBA,SAAC,GAAqB,IAAnBpB,EAAkB,EAAlBA,KAAMY,EAAY,EAAZA,MAChBS,EACJ,6BACE,yBAAKC,IAAKtB,EAAMuB,IAAI,qCACpB,6BAEA,uBAAGC,MAAO,CAAEC,MAAO,SAAWC,KAAM1B,EAAM2B,SAAS,wBACjD,kBAAC,IAAD,CAAQtB,KAAK,UAAUuB,KAAM,kBAACC,EAAA,EAAD,OAA7B,mBAMN,OACE,oCACGjB,EAAQ,kBAAC,IAAD,CAAUkB,QAAM,IAAM,KADjC,IACwC9B,EAAOqB,EAAa,OCXjD,SAASU,IAAO,IAAD,EACFC,mBAAS,IADP,mBACrBC,EADqB,KACdC,EADc,OAEMF,oBAAS,GAFf,mBAErBG,EAFqB,KAEVC,EAFU,KAGtBC,EAAO,uCAAG,+BAAA7C,EAAA,6DAASQ,EAAT,EAASA,KACvBoC,GAAa,GADC,SAES9C,EAAWU,GAFpB,QAERE,EAFQ,QAGLoC,OAAS,WAChB,IAAIC,EAAerC,EAASsC,OAG5BN,EAASK,GACTH,GAAa,IARD,2CAAH,sDAWb,OACE,yBAAKK,UAAU,OACb,kBAAC,EAAD,CAAW9B,aAAc0B,EAASzB,MAAOuB,IACzC,kBAAC,EAAD,CAAQnC,KAAMiC,EAAOrB,MAAOuB,KCpBlC,IAAMO,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAChB,EAAD,OAEFW,K","file":"static/js/main.dbfdda21.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst url = \"https://caret-qr-code-generator.herokuapp.com/get-image\";\r\n\r\nexport const generateQR = async (input) => {\r\n  const body = new FormData();\r\n  body.append(\"userData\", input);\r\n  const response = await axios({\r\n    method: \"post\",\r\n    headers: { \"Content-Type\": \"multipart/form-data\" },\r\n    url: url,\r\n    data: body,\r\n    responseType: \"blob\",\r\n  });\r\n  const responseBlob = new Blob([response.data], { type: \"image/png\" });\r\n  const reader = new window.FileReader();\r\n  reader.readAsDataURL(responseBlob);\r\n  return reader;\r\n};\r\n\r\n/**\r\n * var responseBlob = new Blob([response.data], {type:\"image/png\"}); \r\n    var reader = new window.FileReader();\r\n    reader.readAsDataURL(responseBlob); \r\n    reader.onload = function() {\r\n      var imageDataUrl = reader.result;\r\n      $(\"#selected-image\").attr(\"src\", imageDataUrl)\r\n */\r\n","import React from \"react\";\r\nimport { Form, Input, Button } from \"antd\";\r\n\r\nconst DataInput = ({ handleSubmit, state }) => {\r\n  return (\r\n    <Form onFinish={handleSubmit}>\r\n      <Form.Item name=\"data\">\r\n        <Input.TextArea placeholder=\"All your data goes here....\" />\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <Button loading={state} type=\"primary\" htmlType=\"submit\">\r\n          Generate QR\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default DataInput;\r\n","import React from \"react\";\r\nimport { Skeleton, Button } from \"antd\";\r\nimport { DownloadOutlined } from \"@ant-design/icons\";\r\n\r\nconst Result = ({ data, state }) => {\r\n  const afterState = (\r\n    <div>\r\n      <img src={data} alt=\"Caret System's Generated QR Code\" />\r\n      <br />\r\n\r\n      <a style={{ color: \"white\" }} href={data} download=\"caretsys.tech-qr.png\">\r\n        <Button type=\"primary\" icon={<DownloadOutlined />}>\r\n          &nbsp; Download\r\n        </Button>\r\n      </a>\r\n    </div>\r\n  );\r\n  return (\r\n    <>\r\n      {state ? <Skeleton active /> : null} {data ? afterState : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Result;\r\n","import React, { useState } from \"react\";\r\nimport { generateQR } from \"./api\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"./styles.css\";\r\n\r\nimport DataInput from \"./components/DataInput\";\r\nimport Result from \"./components/Result\";\r\n\r\nexport default function App() {\r\n  const [image, setImage] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const fetchQR = async ({ data }) => {\r\n    setIsLoading(true);\r\n    const response = await generateQR(data);\r\n    response.onload = function () {\r\n      var imageDataUrl = response.result;\r\n      // $(\"#selected-image\").attr(\"src\", imageDataUrl)\r\n      // console.log(imageDataUrl);\r\n      setImage(imageDataUrl);\r\n      setIsLoading(false);\r\n    };\r\n  };\r\n  return (\r\n    <div className=\"App\">\r\n      <DataInput handleSubmit={fetchQR} state={isLoading} />\r\n      <Result data={image} state={isLoading} />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  rootElement\r\n);\r\n"],"sourceRoot":""}